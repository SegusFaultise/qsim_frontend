/**
 * <summary>
 * Styles the main container for the theme toggle button.
 * </summary>
 * <prop name="position" type="fixed">Positions the button relative to the viewport, keeping it in a fixed location on the screen.</prop>
 * <prop name="z-index" type="number">Ensures the button appears on top of other page content.</prop>
 * <prop name="backdrop-filter" type="string">Applies a blur effect to the area behind the semi-transparent button.</prop>
 */
.theme-toggle-button {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 1050;
    background: rgba(128, 128, 128, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    cursor: pointer;
    padding: 8px;
    width: 70px;
    height: 70px;
    backdrop-filter: blur(5px);
    transition: transform 0.2s ease;
}

/**
 * <summary>
 * Defines the hover-state interactions for the theme toggle button,
 * rotating the state vector and adding a glow to the sphere.
 * </summary>
 */
.theme-toggle-button:hover .state-vector {
    transform: rotate(90deg) scale(0.9);
}

.theme-toggle-button:hover .sphere-line {
    stroke-width: 1.5;
    filter: drop-shadow(0 0 2px magenta);
}

.theme-icon-svg {
    width: 100%;
    height: 100%;
    overflow: visible;
}

/**
 * <summary>
 * Contains styles for the different parts of the Bloch sphere SVG representation,
 * including the background, grid lines, and axis.
 * </summary>
 */
.sphere-background {
    fill: rgba(255, 0, 255, 0.1);
}

.sphere-line {
    fill: none;
    stroke: magenta;
    stroke-width: 1;
    transition: all 0.3s ease;
}

.sphere-axis {
    stroke: rgba(255, 255, 255, 0.3);
    stroke-width: 1;
    stroke-dasharray: 2, 2;
}

.pole-label {
    fill: rgba(255, 255, 255, 0.5);
    font-size: 10px;
    font-family: monospace;
}

/**
 * <summary>
 * Styles the state vector arrow within the Bloch sphere, including its
 * bouncy transition animation when the theme changes.
 * </summary>
 * <prop name="transform-origin" type="string">Sets the pivot point for rotations to the center of the sphere.</prop>
 * <prop name="transition" type="string">Applies a custom cubic-bezier timing function to create a spring-like animation effect.</prop>
 */
.state-vector {
    transform-origin: 0 0;
    transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

.vector-line {
    stroke: white;
    stroke-width: 2;
    transition: stroke 0.3s ease;
}

.vector-arrow {
    fill: white;
    transition: fill 0.3s ease;
}

/**
 * <summary>
 * Contains all style overrides that apply when the light theme is active,
 * identified by the [data-bs-theme="light"] attribute. This section changes
 * the color scheme to green and flips the state vector to the |1‚ü© state.
 * </summary>
 */
[data-bs-theme="light"] .sphere-background {
    fill: rgba(0, 255, 0, 0.1);
}

[data-bs-theme="light"] .sphere-line {
    stroke: limegreen;
}

[data-bs-theme="light"] .state-vector {
    transform: rotate(180deg);
}

[data-bs-theme="light"] .theme-toggle-button:hover .state-vector {
    transform: rotate(90deg) scale(0.9);
}

[data-bs-theme="light"] .theme-toggle-button:hover .sphere-line {
    filter: drop-shadow(0 0 3px limegreen);
}

[data-bs-theme="light"] .vector-line {
    stroke: white;
}

[data-bs-theme="light"] .vector-arrow {
    fill: white;
}

[data-bs-theme="light"] .pole-label {
    fill: rgba(255, 255, 255, 0.7);
}
